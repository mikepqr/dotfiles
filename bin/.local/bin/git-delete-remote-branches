#!/bin/bash

# Use fzf to delete remote branches

if git remote get-url origin | grep -q -E 'github\.com.mikepqr'; then
    # this a repo in my personal account
    branchfilter=''
else
    # this is not my repo, so only offer to delete "my" branches
    branchfilter='mleewilliams'
fi

candidate_branches=$(
    git branch --all |
        # don't offer main
        grep --invert-match -E '(main|master)' |
        # only offer remote branches on origin that belong to me
        grep -E '^\s.remotes/origin/'"${branchfilter}"'/' |
        # strip trailing/leading whitespace from each line
        xargs -n 1
)

if [[ -n "$candidate_branches" ]]; then
    chosen_branches=$(
        printf "%s" "${candidate_branches}" |
            fzf --multi --preview-window=bottom:40% --preview="git log {} --"
    )
else
    echo "No remote branches to delete"
    exit 0
fi

if [[ -n "$chosen_branches" ]]; then
    printf "%s" "${chosen_branches}" |
        # remove remotes/origin
        sed -E 's/^remotes\/origin\///' |
        xargs git push --delete origin
fi
