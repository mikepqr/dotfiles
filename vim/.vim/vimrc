call plug#begin()
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-vinegar'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-rhubarb'
Plug 'Vimjas/vim-python-pep8-indent'
Plug 'w0rp/ale'
Plug 'christoomey/vim-tmux-navigator'
Plug 'bronson/vim-visual-star-search'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'davidhalter/jedi-vim'
Plug 'maralla/completor.vim'
Plug 'greymd/oscyank.vim'
Plug 'farmergreg/vim-lastplace'
Plug 'machakann/vim-highlightedyank'  " not needed in neovim
Plug 'cocopon/iceberg.vim'
Plug 'nathanaelkane/vim-indent-guides'
call plug#end()

" Completion
let g:jedi#completions_enabled = 0
let g:completor_complete_options = 'menuone,preview'
let g:completor_auto_trigger = 0
let g:completor_auto_close_doc = 0
inoremap <silent><expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <silent><expr> <Tab> Tab_Or_Complete()

function! Tab_Or_Complete() abort
  if pumvisible()
    return "\<C-n>"
  elseif s:check_back_space()
    return "\<Tab>"
  else
    return "\<C-R>=completor#do('complete')\<CR>"
  endif
endfunction

function! s:check_back_space() abort
    let col = col('.') - 1
    return !col || getline('.')[col - 1]  =~ '\s'
endfunction

let $PYTHONPATH .= ':'.expand('~/.jedi')

" Buffers
set hidden
set autoread
" Remember more files
set viminfo=!,'1000,<50,s10,h
" Windows
set textwidth=79  " want this more often than not
set colorcolumn=80
set nowrap
set diffopt+=vertical
" Change default position of new splits
set splitbelow
set splitright
" Tabs and whitespace
set shiftwidth=4
set expandtab
set list
" Mouse
set mouse=a  " mouse support in terminals
if &term =~ '^screen'
    " resize splits in tmux
    set ttymouse=xterm2
    " make bracketed paste mode work, https://vi.stackexchange.com/a/16579
    let &t_BE="\<Esc>[?2004h"
    let &t_BD="\<Esc>[?2004l"
    let &t_PS="\<Esc>[200~"
    let &t_PE="\<Esc>[201~"
endif
" Clipboard
set clipboard^=unnamed  " yanks and cuts go in system clipboard
" Search
set ignorecase
set smartcase
set showmatch
set hlsearch
" Keys
set pastetoggle=<Leader>tp
nnoremap <leader><space> :noh<cr>
" h and l and ~ wrap over lines
set whichwrap=h,l,~
" Q reformats current paragraph or selected text
nnoremap Q gqap
vnoremap Q gq
" Use up and down to move by screen line
map <up> gk
map <down> gj
vmap <up> gk
vmap <down> gj
inoremap <up> <c-o>gk
inoremap <down> <c-o>gj
nmap k gk
nmap j gj
vmap k gk
vmap j gj

" Show list of possible files on tab completion, rather than first guess
set wildmode=longest,list

" Screen decoration
set relativenumber
set statusline=
set statusline+=%#PmenuSel#
set statusline+=%{FugitiveStatusline()}
set statusline+=%#LineNr#
set statusline+=\ %f\ %y\ %=%c,%l/%L

" Colors
set termguicolors
try
    set background=dark
    colorscheme iceberg
catch
    " Otherwise default
    set background=dark
    colorscheme default
endtry

" Set fullscreen background to same color as normal text
if has("gui_running")
    set gfn=Source\ Code\ Pro:h13
    set fuoptions=maxvert
    set guioptions-=T
endif

" Open in TeXShop
nnoremap <leader>tx :!open -a TeXShop %<cr><cr>

" Use :w!! to save root files you forgot to open with sudo
ca w!! w !sudo tee "%"

" Filetype-specific configuration
autocmd FileType asciidoc,markdown,text setlocal formatoptions+=n nojoinspaces spell
autocmd Filetype gitcommit setlocal spell
autocmd Filetype javascript setlocal shiftwidth=2
let g:ale_fixers = {
\   'python': ['isort'],
\}

" Expand %% to directory of file in current buffer (also %:h<Tab>)
cnoremap <expr> %% getcmdtype() == ':' ? expand('%:h').'/' : '%%'

" Name current syntax group
map <F10> :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'
\ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"
\ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"<CR>

" ss to generate new split
nnoremap <silent> ss <C-w>s

" readline bindings for command mode
cnoremap <C-A> <Home>
cnoremap <C-E> <End>

" FZF bindings
nmap <leader>h :History<cr>
nmap <leader>b :Buffers<cr>
nmap <leader>f :Files<cr>

" Unimpaired-style mappings to jump to ALE warnings/errors
nmap <silent> [W <Plug>(ale_first)
nmap <silent> [w <Plug>(ale_previous)
nmap <silent> ]w <Plug>(ale_next)
nmap <silent> ]W <Plug>(ale_last)

" Lint less
let g:ale_lint_on_text_changed = 'never'

" Leader-y to yank to system clipboard (works over remote tmux)
noremap <silent> <Leader>y :Oscyank<cr>

let g:indent_guides_auto_colors = 0
let g:indent_guides_enable_on_vim_startup = 1
" Same as iceberg LineNr
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven  ctermbg=235 guibg=#1e2132
