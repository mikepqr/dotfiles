setw -g xterm-keys on
setw -g mode-keys vi
set -g mouse on
set -g history-limit 100000
set -g set-clipboard on

if-shell 'test "$(uname)" = "Darwin"' \
    'set-option -g default-command "reattach-to-user-namespace -l bash"'

# Use tmux-256color if available
if-shell 'infocmp tmux-256color' \
    'set -g default-terminal "tmux-256color"' \
    'set -g default-terminal "screen-256color"'
# https://gist.github.com/bbqtd/a4ac060d6f6b9ea6fe3aabe735aa9d95
set -ga terminal-overrides ",*256col*:Tc,alacritty:RGB"

# https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set-option -sg escape-time 10

# Make autoread work in neovim (suggested by :checkhealth)
set-option -g focus-events on

# Count sessions start at 1
set -g base-index 1
set-option -g renumber-windows on

# rebind prefix (C-b) to Control-s
set -g prefix C-s
unbind-key C-b

# Split with | and -
# https://blog.bugsnag.com/tmux-and-vim/
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# C-s C-s to split (like ss to split inside vim)
bind C-s run-shell ~/.tmux/split
# C-s C-w to open new window
bind C-w new-window
# bind prefix D to a standard layout
bind D source-file ~/.tmux/dev

# Resize with HJKL
bind-key -r H resize-pane -L 2
bind-key -r J resize-pane -D 1
bind-key -r K resize-pane -U 1
bind-key -r L resize-pane -R 2

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
# Use prefix to re-enable Ctrl-L and Ctrl-K for redraw/kill line
bind C-l send-keys 'C-l'
bind C-k send-keys 'C-k'

# prefix b to jump back to the previous command by searching for a nbsp
# (https://youtu.be/uglorjY0Ntg)
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward " "
bind-key -T copy-mode-vi b send-keys -X start-of-line\; send-keys -X search-backward " "

# https://raw.githubusercontent.com/gkeep/iceberg-dark/master/.tmux/iceberg_minimal.tmux.conf
set -g status-interval 1
set -g status-position bottom
set -g status-justify centre
set -g status-style "bg=#1e2132"
set -g window-style ""
set -g window-active-style ""

set -g status-left "#h"
set -g status-left-style "fg=#6b7089"
set -g status-left-length 50

set -g status-right "%a %b %d #[fg=#c6c8d1]%R"
set -g status-right-style "fg=#6b7089"
set -g status-right-length 25

set -g window-status-current-style "fg=#c6c8d1"
set -g window-status-style "fg=#6b7089"
set -g window-status-format " #I #W#F "
set -g window-status-current-format " #I #W#F "
set -g window-status-separator ""

set -g pane-active-border-style "fg=#e27878"
set -g pane-border-style "fg=#6b7089"

# Copy and paste
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-selection
